#!/bin/sh
#
# regression test for spd and C interface library
#
 
#
# Trap help requests
#
if [ $# -gt 0 -a "$1" == '-?' ]
then
	script_help spd_regress
	exit 1
fi

#
# Set up debugging conditions for the server.
# The server trace is sent to spd.log.
#
dbg=""
strace=""
stfile="spd_c.log"
for arg
do
        r=$(expr $arg : '-d*' '>' 1)
        if [ "$r" == 1 ]
        then
                dbg=${dbg}" "$arg
		shift
        fi
done
                                                                                
if [ "$dbg" != "" ]
then
        strace="&>"$stfile
fi

#
# Set up the test script stub
#
stub=$1
if [ -z "$stub" ]
then
	stub="test"
fi
                                                                                
#
# Start the server
#
if [ -f $stfile ]
then
        rm $stfile
fi
                                                                                
eval spd $dbg $strace &
sleep 1
#
# Run the tests
#
for f in data/${stub}*.txt
do
	echo "Running $f"
	f=`basename $f`
	rm -f port[1-9].txt
	testspd data/$f >spd_regress.txt 
	sleep 1 
	diff spd_regress.txt data/result_$f
	rm -f spd_regress.txt port[1-9].txt
done

#
# Stop the server after displaying its status
#
spc status stop

#help
#Syntax:   spd_regress [options] [file_stub]
#Function: Regression test the C interface library and the spd server
#          Server tracing, if requested is sent to 'spd_c.log'
#          'file_stub' is the common prefix of the test scripts to be run.
#          The file names must end in '.txt' and a matching set of
#          result files whose names start with 'result_' must exist.
#          If 'file_stub' is omitted it will default to 'test'.
#          Both test scripts and result files must be in the 'data' directory.
#Options:  -d      Sets server debugging levels
#
#end

