.\" Martin Gregorie
.\" martin@gregorie.demon.co.uk
.\" 10 Sadlers Mead
.\" Harlow
.\" Essex CM18 6HG, 
.\" UK
.\"
.TH spd 1 "April, 2005"
.LO 1
.SH NAME
spd \- a serial port server for C or Java clients.
.SH SYNOPSIS
.B spd
.RB [ \-dD ] 
.I -p=port
.SH DESCRIPTION
.B spd
is a non-threaded server that is based round the poll() function,
which handles all events on TCP connections and serial ports. It\'s 
sole configuration requirements are to set the port it listens on 
and to define the serial ports it is allowed to provide access to. 
The port is defined via the command line 
.I -p
option and defaults to 16001. Serial ports are defined in the
.I spd.conf
configuration file. See below for format and location. 
Socket handling uses the 
.I skt 
module. Poll list manipulation is managed by the
.I fdlist 
module. Both are part of the 
.I libenviron.a
package.
.sp
Every TCP/IP connection and every open serial port has a session
control block. The purpose of the session is to associate
entries in the poll list with their context information.
The context for a TCP/IP connection is a reference to any serial port
it may have opened. The context for a serial port session is
contained in the control block referenced by its session.
Each session is indexed by its file fd and records the type of
file (TCP connection or PORT) it is related to. TCP sessions
that have opened ports contain a reference to the PORT session.
PORT sessions contain a reference to the associated serial port
control block.
.sp
TCP connections are added to the poll list as they are accepted and
removed from the list as they are closed. A TCP session is created
when the connection is accepted and destroyed when it is closed.
A TCP connection that has
opened a serial port remains open as long as the port is in use
and its session references the PORT session as long as the port is open. 
A TCP session exists longer than a PORT session and may open and close
more than one port during its existence.
.sp 
TCP sessions requesting a list of available ports, the server status or
controlling the server, e.g. stopping it, never have an associated
serial port. 
.sp
When a serial port is opened a PORT session is created, its fd is added 
to the poll list and its reference is placed in the controlling TCP
session.
When the port is closed it is removed from the poll list, its PORT
session is unlinked from the controlling TCP session and the PORT 
is then destroyed. The session for an open port references the 
port\'s control block.
.sp
There is a serial port control block associated with each serial port
defined in the configuration file. Each control block  exists for the 
whole life of the spd process. It holds the port
context data and a pair of circular buffers to buffer the port\'s 
input and output data streams. Client commands that change the serial port
settings record the changes in the control block, where they can be 
retrieved by an 
.sp
.in +5
.B spc status
.in -5
.sp 
command, and apply them directly to the 
port. All other commands merely change control block settings or move
data to or from the buffers. All data transfers between the buffers and 
serial port take place asynchronously and independently of commands
received from the client. As a result the 
.I query
command is provided
to allow the client to discover how full the buffers are. The 
.B Java sleep() method
and 
.B C sp_sleep() function
interfaces use this when waiting for transfers to complete.
It is also available as the 
.B Java query() method 
or the 
.B C sp_query() function
to client programs that implement their own flow control.
.sp
.SH OPTIONS
.in +5
.B \-?
.in +10
display summary help for
.B spd
.in -10
.B \-d
.in +10
display debugging output. This option may appear more than once,
each appearance causing debugging output to be more verbose.
.in -10
.B \-D
.in +10
run as a daemon. This is normally only needed if 
.B spd
is being started at system boot.
.in -10
.B \-p=port
.in +10
listen on the port for connections. The default is to listen on port 16001.
.in -10
.in -5
.SH FILES
spd.conf
.in +10
The configuration file. It may be placed in 
.I /etc
, 
.I /usr/local/etc
, or the current directory at the time
.B spd
is started. Possible locations are searched in the order shown above.
.sp
Lines starting with a 
.B #
are comments and ignored. Blank lines are ignored. 
The first two significant lines take the form:
.sp
.in +5
devices=nn
.br
maxmessage=llll
.in -5
.sp
where 
.I nn 
is the number of serial ports defined below and 
.I llll
is the biggest message that 
.B spd 
expects to send or receive. This value
sets the size of the input and output buffers associated with each open
serial port. The buffers are set to be twice the size of the biggest message.
.sp  
Each serial port definition is a comma separated list of values. 
The last value is terminated by the newline that ends the definition.
The fields are:
.sp
.nf
Field 1: The name used by spd to reference the port 
Field 2: \'p\', \'f\' or \'l\'. Map to a serial port, file or 
         software loopback.
Field 3: The absolute or relative name of the mapped device. 
         A software loopback will open the file but leave it 
         empty.
Field 4: \'Y\' if the port is accessable. 
         \'N\' if it is not to be used.
Field 5: The default baud rate.
Field 6: The default number of data bits.
Field 7: Default parity. 
         \'N\' is none, \'E\' is even, \'O\' is odd.
Field 8: The default number of stop bits.
.fi
.sp
A port known as 
.I ttyS0
which is an active 9600b serial port using 8 data 
bits, no parity and one stop bit is:
.sp
.nf
ttyS0,p,/dev/ttyS0,Y,9600,8,N,1
.fi
.sp
The port shown below is sometimes used for testing and is known as  
.I testport. 
It is an active file mapped to 
.I testport.txt. 
The line parameters must be present and will be validated but are ignored:
.sp
.nf
testport,f,testport.txt,Y,9600,8,N,1
.fi
.sp
The port shown below is sometimes used for testing an interactive program
and is known as  
.I echo. 
It is an active loopback that is mapped to the
.I echo.txt. 
file. The line parameters must be present and will be validated but are 
ignored:
.sp
.nf
echo,l,testport.txt,Y,9600,8,N,1
.fi
.sp

.SH DEVELOPER NOTES

The following was true as at Kernel 2.4.
.sp
When POLLIN events are enabled for an empty file a continuous series of
POLLIN events are generated by the kernel, causing the event trap to 
retrieve a rapid series of null characters. Anything subsequently written 
to the file will not be retrieved. This affects the internal behavior of
.B spd
if a client accesses a port configured to access a file.
.sp
If the port is configured to access a serial connection POLLIN behaves 
as expected and a POLLIN event is only generated when a character arrives 
in the UART\'s buffer. The spurious POLLIN events are never seen.
.sp
As the spurious POLLIN events do not affect the external behavior of
.B spd
no attempt has been made to prevent them happening. The developer should
note that they will appear in debugging output whenever a port that has 
been mapped to an empty file is opened or EOF is reached when a file is 
being read.
.sp 
The main consequence of all this that, as most of the test scripts are 
written to use file mapped ports, they write data to the port and only
retrieve it after closing and re-opening the port. The other consequence
is that the
.B Java echo() method
and the
.B C sp_echo function
will both give erroneous results if they are tested against a file 
mapped port. Use 
.B sptarget
to exercise them over a serial connection.
 
.SH FUTURE DEVELOPMENTS

Port
.B spd
and
.B spc
to DOS/Windows.
There are large differences between UNIX/Linux and DOS/Windows
systems. The main problems are:
.sp
.in +5 
The serial port fd is uniquely assigned by
the operating system, but this is not the case in DOS/Windows, so a
function layer must be introduced to handle this difference.
.sp
Not all DOS/Windows compilers have a library that implements sockets
or poll() [or even select() !].
.sp
Serial port access is almost nonexistent under these operating systems,
so the use of a library such as Willies Computing\'s COMM_DRV is
probably essential.
.sp
.in -5



